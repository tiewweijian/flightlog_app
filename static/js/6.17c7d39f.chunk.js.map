{"version":3,"sources":["components/AdminControl.js","components/Typography/PageTitle.js","components/Popouts/LoginModal.js","components/Popouts/EditFlightLogModal.js","components/Popouts/CreateAccountModal.js","components/Popouts/AdminControlModal.js","pages/Dashboard.js"],"names":["AdminControl","isAdminControlOpen","setIsAdminControlOpen","useContext","UserContext","React","createElement","Button","className","onClick","fill","viewBox","d","dangerouslySetInnerHTML","__html","PageTitle","_ref","children","Modals","isModalOpen","setModalStatus","username","setUsername","useState","password","setPassword","isIncorrectCreds","setIsIncorrectCreds","token","storeToken","removeToken","isLoginModalOpen","setIsLoginModalOpen","tableData","setTableData","isAdmin","setIsAdmin","closeModal","Modal","isOpen","onClose","ModalHeader","onSubmit","async","event","preventDefault","response","axios","post","LOGIN_USER","data","status","console","log","res","get","GET_FLIGHT_LOG","headers","error","IS_ADMIN","ModalBody","Label","Input","value","valid","onChange","e","target","type","ModalFooter","EditFlightLogModal","editData","setIsEditLogOpen","isEditLogOpen","tailNumber","setTailNumber","flightId","setFlightId","takeoff","setTakeoff","Date","landing","setLanding","duration","setDuration","useEffect","parsedTakeoff","parsedLanding","isNaN","getTime","flightID","calculateDuration","start","end","toFixed","style","overflow","updatedData","toISOString","put","PUT_FLIGHT_LOG","_id","DateTimePicker","date","calculatedDuration","minDate","readOnly","CreateAccountModal","isCreateAccountOpen","setIsCreateAccountOpen","setUserData","confirmPassword","setConfirmPassword","accountExists","setAccountExist","differentPassword","setDifferentPassword","alert","toLocaleLowerCase","accountData","REGISTER_USER","GET_ALL_USERS","msg","AdminControlModal","userData","fetchUsers","handleDelete","row","Swal","fire","title","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","asyncAlert","delete","DELETE_USER","TableContainer","Table","TableHeader","TableCell","TableBody","map","user","i","TableRow","key","TrashIcon","aria-label","Dashboard","page","setPage","setData","setEditData","searchText","totalResults","length","formatDateToSingaporeTime","dateString","Intl","DateTimeFormat","timeZone","dateStyle","timeStyle","format","trim","slice","filteredData","filter","item","toLowerCase","includes","DELETE_FLIGHT_LOG","Fragment","EditIcon","handleEdit","TableFooter","Pagination","resultsPerPage","label","p","Card","CardBody"],"mappings":"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","file":"static/js/6.17c7d39f.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { Button } from '@windmill/react-ui'\nimport { UserContext } from '../context/UserContext'\n\nconst AdminControl = () => {\n\n  const { isAdminControlOpen, setIsAdminControlOpen} = useContext(UserContext)\n\n  return (\n    <Button\n      className=\"flex items-center justify-between p-4 mb-8 text-sm font-semibold text-purple-100 bg-purple-600 rounded-lg shadow-md focus:outline-none focus:shadow-outline-purple\"\n      onClick = {() => setIsAdminControlOpen(true)}>\n      <div className=\"flex items-center\">\n        <svg className=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"></path>\n        </svg>\n        <span>View Admin Controls</span>\n      </div>\n      <span><span dangerouslySetInnerHTML={{ __html: '&RightArrow;' }}></span>\n      </span>\n    </Button>\n  )\n}\n\nexport default AdminControl\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","import React, { useContext, useState } from 'react'\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from '@windmill/react-ui'\nimport { Input, HelperText, Label, Select, Textarea } from '@windmill/react-ui'\nimport axios from 'axios';\nimport { UserContext } from '../../context/UserContext';\nimport { GET_FLIGHT_LOG, IS_ADMIN, LOGIN_USER } from '../../config/constants';\n\nconst Modals = ({isModalOpen, setModalStatus}) => {\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isIncorrectCreds, setIsIncorrectCreds] = useState(false)\n  const { token, storeToken, removeToken } = useContext(UserContext);\n  const { isLoginModalOpen, setIsLoginModalOpen, tableData, setTableData, isAdmin, setIsAdmin } = useContext(UserContext)\n\n\n  const handleClick = () => {\n    setModalStatus(!isModalOpen)\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // Prevent the default form submission\n\n    try {\n      // Make Axios request with form data\n      const response = await axios.post(LOGIN_USER, {\n        username,\n        password,\n      });\n\n      if (response.data.status == true) {\n        storeToken(response.data.token);\n        console.log(response.data.token)\n      }\n\n      try {\n        const res = await axios.get(GET_FLIGHT_LOG, {\n          headers: {\n            'x-auth-token': response.data.token\n          }\n        });\n        console.log(res.data)\n        setTableData(res.data); \n      } catch (error) {\n        console.log(error)\n      }\n      closeModal()\n\n      try {\n        const res = await axios.get(IS_ADMIN, {\n          headers: {\n            'x-auth-token': response.data.token\n          }\n        });\n\n        if (res.data.isAdmin == true) {\n          setIsAdmin(true)\n        }\n      } catch (error) {\n        setIsAdmin(false)\n      }\n      closeModal()\n    } catch (error) {\n      setIsIncorrectCreds(true)\n      console.error('Error submitting form:', error);\n    }\n  \n  };\n\n\n\n  const closeModal = () => {\n    setUsername(\"\")\n    setPassword(\"\")\n    setIsLoginModalOpen(false)\n  }\n\n  return (\n      <Modal isOpen={isLoginModalOpen} onClose={closeModal}>\n        <ModalHeader>Login</ModalHeader>\n        <form onSubmit = {handleSubmit}>\n        <ModalBody>\n        <div className=\"hidden sm:block\">\n          <Label>\n            <span>Username</span>\n            {isIncorrectCreds \n            ? <Input\n              className=\"mt-1\"\n              value={username}\n              valid={false}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            : <Input\n              className=\"mt-1\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            }\n          </Label>\n        </div>\n        <div className=\"hidden sm:block pt-5\">\n        <Label>\n            <span>Password</span>\n            {isIncorrectCreds \n            ? <Input\n              className=\"mt-1\"\n              type=\"password\"\n              value={password}\n              valid={false}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            : <Input\n              className=\"mt-1\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            }\n          </Label>\n        </div>\n        </ModalBody>\n\n        <ModalFooter>\n        <div>\n          <Button type=\"submit\">Login</Button>\n        </div>\n      </ModalFooter>\n      </form>\n      </Modal>\n  )\n}\n\nexport default Modals\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from '@windmill/react-ui';\nimport { Input, Label } from '@windmill/react-ui';\nimport axios from 'axios';\nimport { UserContext } from '../../context/UserContext';\nimport DateTimePicker from 'react-datetime-picker';\nimport 'react-datetime-picker/dist/DateTimePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport { GET_FLIGHT_LOG, PUT_FLIGHT_LOG } from '../../config/constants';\n\nconst EditFlightLogModal = () => {\n  const { token, editData, setIsEditLogOpen, setTableData, isEditLogOpen } = useContext(UserContext);\n  const [tailNumber, setTailNumber] = useState(\"\");\n  const [flightId, setFlightId] = useState(\"\");\n  const [takeoff, setTakeoff] = useState(new Date()); // Initialize with current date\n  const [landing, setLanding] = useState(new Date()); // Initialize with current date\n  const [duration, setDuration] = useState(\"\");\n\n  useEffect(() => {\n    if (editData) {\n      const parsedTakeoff = new Date(editData.takeoff);\n      const parsedLanding = new Date(editData.landing);\n\n      // Validate dates\n      if (!isNaN(parsedTakeoff.getTime())) {\n        setTakeoff(parsedTakeoff);\n      }\n      if (!isNaN(parsedLanding.getTime())) {\n        setLanding(parsedLanding);\n      }\n      \n      setTailNumber(editData.tailNumber || \"\");\n      setFlightId(editData.flightID || \"\");\n      setDuration(editData.duration || \"\");\n    }\n  }, [editData]);\n\n  const calculateDuration = (start, end) => {\n    const differenceMillis = end.getTime() - start.getTime();\n    const differenceHours = differenceMillis / (1000 * 60 * 60);\n    return differenceHours.toFixed(1); // Format to 1 decimal place\n  };\n\n  const handleStartDateChange = (date) => {\n    if (date) {\n      setTakeoff(date);\n      if (landing) {\n        const calculatedDuration = calculateDuration(date, landing);\n        setDuration(calculatedDuration);\n      }\n    }\n  };\n\n  const handleEndDateChange = (date) => {\n    if (date) {\n      setLanding(date);\n      if (takeoff) {\n        const calculatedDuration = calculateDuration(takeoff, date);\n        setDuration(calculatedDuration);\n      }\n    }\n  };\n\n  const closeModal = () => {\n    setIsEditLogOpen(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    closeModal();\n\n    const updatedData = {\n      tailNumber: tailNumber, \n      flightID: flightId, \n      takeoff: takeoff.toISOString(), \n      landing: landing.toISOString(), \n      duration: duration\n    };\n\n    try {\n      await axios.put(PUT_FLIGHT_LOG + editData._id, updatedData, {\n        headers: {\n          'x-auth-token': token,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const res = await axios.get(GET_FLIGHT_LOG, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      setTableData(res.data); \n    } catch (error) {\n      console.error('Error updating flight log:', error);\n    }\n  };\n\n  return (\n    <Modal isOpen={isEditLogOpen} onClose={closeModal} style={{ overflow: \"visible\" }}>\n      <ModalHeader>Edit Flight Log</ModalHeader>\n      <form onSubmit={handleSubmit}>\n        <ModalBody>\n          <div className=\"hidden sm:block\">\n            <Label>\n              <span>Tail Number</span>\n              <Input\n                className=\"mt-1\"\n                value={tailNumber}\n                onChange={(e) => setTailNumber(e.target.value)}\n              />\n            </Label>\n          </div>\n          <div>\n            <Label>\n              <span>Takeoff</span>\n              <DateTimePicker\n                value={takeoff}\n                onChange={handleStartDateChange}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </Label>\n          </div>\n          <div>\n            <Label>\n              <span>Landing</span>\n              <DateTimePicker\n                value={landing}\n                onChange={handleEndDateChange}\n                minDate={takeoff} // Disable dates before the takeoff date\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </Label>\n          </div>\n          <div className=\"hidden sm:block\">\n            <Label>\n              <span>Duration</span>\n              <Input\n                className=\"mt-1\"\n                value={duration}\n                readOnly\n              />\n            </Label>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <div>\n            <Button type=\"submit\">Confirm Changes</Button>\n          </div>\n        </ModalFooter>\n      </form>\n    </Modal>\n  );\n};\n\nexport default EditFlightLogModal;\n","import React, { useContext, useEffect, useState } from 'react' \nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button} from '@windmill/react-ui'\nimport { Input, HelperText, Label, Select, Textarea } from '@windmill/react-ui'\nimport axios from 'axios';\nimport { UserContext } from '../../context/UserContext';\nimport { GET_ALL_USERS, REGISTER_USER } from '../../config/constants';\nconst CreateAccountModal = () => {\n\n\n  const { token, isCreateAccountOpen, setIsCreateAccountOpen, setUserData } = useContext(UserContext);\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n  const [accountExists, setAccountExist] = useState(false)\n  const [differentPassword, setDifferentPassword] = useState(false)\n\n  const closeModal = () => {\n    setIsCreateAccountOpen(false)\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (password != confirmPassword) {\n      alert(\"Different Password\")\n      setDifferentPassword(true)\n    } else if (username.toLocaleLowerCase() == \"admin\") {\n      alert(\"Username not allowed\")\n      setAccountExist(true)\n    } else {\n  \n      const accountData = {\n        username: username, \n        password: password\n      }\n  \n      try {\n        const response = await axios.post(REGISTER_USER, accountData);\n        console.log(response.data) \n        alert(\"Account created\")\n        closeModal()\n\n        try {\n          const res = await axios.get(GET_ALL_USERS, {\n            headers: {\n              'x-auth-token': token\n            }\n          });\n          console.log(res.data)\n          setUserData(res.data); \n        } catch (error) {\n          console.log(error)\n        }\n\n      } catch (error) {\n        if (error.response.data.msg == \"User already exists\") {\n          alert(\"Username is used\")\n          setAccountExist(true)\n        } \n        console.error('Error updating flight log:', error);\n      }\n    }\n  }\n\n  return (\n      <Modal isOpen={isCreateAccountOpen} onClose={closeModal} >\n        <ModalHeader>Create Account</ModalHeader>\n        <form onSubmit = {handleSubmit}>\n        <ModalBody>\n        <div className=\"hidden sm:block\">\n          <Label>\n            <span>Username</span>\n            {accountExists ? \n            <Input\n            className=\"mt-1\"\n            valid={false}\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}/>\n            : <Input\n            className=\"mt-1\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}/>\n            }\n            </Label>\n        </div>\n        <div className=\"hidden sm:block\">\n          <Label>\n            <span>Password</span>\n            {differentPassword ? \n            <Input\n            className=\"mt-1\"\n            type=\"password\"\n            valid={false}\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}/>\n            : <Input\n            className=\"mt-1\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}/>\n            }\n            </Label>\n        </div>\n        <div className=\"hidden sm:block\">\n          <Label>\n            <span>Password</span>\n            {differentPassword ? \n            <Input\n            className=\"mt-1\"\n            type=\"password\"\n            valid={false}\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}/>\n            : <Input\n            className=\"mt-1\"\n            type=\"password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}/>\n            }\n            </Label>\n        </div>\n        </ModalBody>\n\n        <ModalFooter>\n        <div>\n          <Button type=\"submit\">Create Account</Button>\n        </div>\n      </ModalFooter>\n      </form>\n      </Modal>\n  )\n}\n\nexport default CreateAccountModal\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from '@windmill/react-ui'\nimport { Input, HelperText, Label, Select, Textarea, TableBody, TableContainer, Table, TableHeader, TableCell,TableRow, TableFooter, } from '@windmill/react-ui'\nimport axios from 'axios';\nimport { UserContext } from '../../context/UserContext';\nimport { TrashIcon } from '../../icons';\nimport Swal from 'sweetalert2';\nimport { DELETE_USER, GET_ALL_USERS } from '../../config/constants';\n\nconst AdminControlModal = ({isModalOpen, setModalStatus}) => {\n\n  const { token, storeToken, removeToken } = useContext(UserContext);\n  const { isLoginModalOpen, setIsLoginModalOpen, tableData, setTableData, isAdminControlOpen, setIsAdminControlOpen, userData, setUserData } = useContext(UserContext)\n\n  const closeModal = () => {\n    setIsAdminControlOpen(false)\n  }\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get(GET_ALL_USERS, {\n          headers: {\n            'x-auth-token': token\n          }\n        });\n        console.log(response.data)\n        setUserData(response.data)\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n\n    if (token) {\n      fetchUsers()\n    }\n  }, [token]);\n\n  const asyncAlert = async () => {\n    const result = await Swal.fire({\n      title: 'You are deleting this user and cannot be recovered',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'YES',\n      cancelButtonText: 'NO',\n    });\n  \n    return result.isConfirmed ? 'YES' : 'NO';\n  };\n  \n  const handleDelete = async (row, token) => {\n\n    const result = await asyncAlert() \n\n    if (result == 'YES') {\n      try {\n        await axios.delete(DELETE_USER + row._id, {\n          headers: {\n            'x-auth-token': token // Include the token in the headers if needed\n          }\n        });\n  \n        try {\n          const res = await axios.get(GET_ALL_USERS, {\n            headers: {\n              'x-auth-token': token\n            }\n          });\n          console.log(res.data)\n          setUserData(res.data); \n        } catch (error) {\n          console.log(error)\n        }\n      } catch (error) {\n        console.error('Error deleting the flight log:', error);\n      }\n    }\n  } \n\n  return (\n      <Modal isOpen={isAdminControlOpen} onClose={closeModal}>\n        <ModalHeader>Delete Users</ModalHeader>\n        <ModalBody>\n        <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Username</TableCell>\n              <TableCell>ID</TableCell>\n              <TableCell></TableCell>\n\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {userData.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <p className=\"font-semibold\">{user.username}</p>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{user._id}</span>\n                </TableCell>\n                <TableCell>\n                  {user.username == \"admin\" ? \"\" : <Button icon={TrashIcon} aria-label=\"Edit\" onClick={() => handleDelete(user, token)}/>}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        </TableContainer>\n        </ModalBody>\n        <ModalFooter>\n\n      </ModalFooter>\n      </Modal>\n  )\n}\n\nexport default AdminControlModal\n","import React, { useState, useEffect, useContext } from 'react'\nimport AdminControl from '../components/AdminControl'\nimport PageTitle from '../components/Typography/PageTitle'\nimport { HeartIcon, EditIcon, TrashIcon } from '../icons'\nimport Swal from 'sweetalert2';\n\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Button,\n} from '@windmill/react-ui'\nimport Modals from '../components/Popouts/LoginModal'\nimport { UserContext } from '../context/UserContext'\nimport { Card, CardBody } from '@windmill/react-ui'\nimport axios from 'axios'\nimport EditFlightLogModal from '../components/Popouts/EditFlightLogModal'\nimport CreateAccountModal from '../components/Popouts/CreateAccountModal';\nimport AdminControlModal from '../components/Popouts/AdminControlModal';\nimport { DELETE_FLIGHT_LOG, GET_FLIGHT_LOG } from '../config/constants';\n\nfunction Dashboard() {\n  const [page, setPage] = useState(1)\n  const [data, setData] = useState([])\n  const { isLoginModalOpen, setIsLoginModalOpen, token, tableData, setEditData, setIsEditLogOpen, setTableData, searchText, isAdmin, setIsAdmin} = useContext(UserContext)\n\n  // pagination setup\n  const resultsPerPage = 10\n  const totalResults = tableData.length\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p)\n  }\n\n  const formatDateToSingaporeTime = (dateString) => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-SG', {\n      timeZone: 'Asia/Singapore',\n      dateStyle: 'short', // or 'full', 'medium', 'long'\n      timeStyle: 'short'  // or 'full', 'medium', 'short'\n    }).format(date);\n  };\n  \n  useEffect(() => {\n    if (searchText.trim() == \"\") {\n      setData(tableData.slice((page - 1) * resultsPerPage, page * resultsPerPage))\n    } else {\n      const filteredData = tableData.filter(item => \n        item.tailNumber.toLowerCase().includes(searchText.toLowerCase()) ||\n        item.flightID.toLowerCase().includes(searchText.toLowerCase())\n      );\n      setData(filteredData.slice((page - 1) * resultsPerPage, page * resultsPerPage))\n    }\n\n\n  }, [page, tableData, searchText])\n\n  useEffect(() => {\n    if (!token) {\n      setIsLoginModalOpen(true); \n    } \n  }, [token])\n\n  const handleClick = () => {\n    console.log('Button clicked. Current state of isModalOpen:', isLoginModalOpen);\n\n    if (!token) {\n      setIsLoginModalOpen(true)\n    } else {\n      setIsLoginModalOpen(false )\n    }\n  };\n\n  const handleEdit = (row) => {\n    console.log(row)\n    setEditData(row)\n    setIsEditLogOpen(true)\n  };\n\n\n  const asyncAlert = async () => {\n    const result = await Swal.fire({\n      title: 'You are deleting this flight log, and cannot be recovered. Proceed?',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'YES',\n      cancelButtonText: 'NO',\n    });\n  \n    return result.isConfirmed ? 'YES' : 'NO';\n  };\n  \n  const handleDelete = async (row, token) => {\n\n    const result = await asyncAlert() \n\n    if (result == 'YES') {\n      try {\n        await axios.delete(DELETE_FLIGHT_LOG + row._id, {\n          headers: {\n            'x-auth-token': token // Include the token in the headers if needed\n          }\n        });\n  \n        try {\n          const res = await axios.get(GET_FLIGHT_LOG, {\n            headers: {\n              'x-auth-token': token\n            }\n          });\n          console.log(res.data)\n          setTableData(res.data); \n        } catch (error) {\n          console.log(error)\n        }\n      } catch (error) {\n        console.error('Error deleting the flight log:', error);\n      }\n    }\n  } \n    \n\n\n  \n\n  return (\n    <>\n      <PageTitle>Summary</PageTitle>\n      \n      {isAdmin ? <AdminControl/> : \"\"}\n\n      <Modals/> \n\n      <EditFlightLogModal/>\n\n      <AdminControlModal/>\n\n      <CreateAccountModal/>\n\n      {token ? \n        <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Tail Number</TableCell>\n              <TableCell>Flight ID</TableCell>\n              <TableCell>Take Off</TableCell>\n              <TableCell>Landing</TableCell>\n              <TableCell>Duration</TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n\n\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {data.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <p className=\"font-semibold\">{user.tailNumber}</p>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{user.flightID}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{formatDateToSingaporeTime(user.takeoff)}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{formatDateToSingaporeTime(user.landing)}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{user.duration}</span>\n                </TableCell>\n                <TableCell>\n                  <Button icon={EditIcon} aria-label=\"Edit\" onClick={() => handleEdit(user, token)}/>\n                </TableCell>\n                <TableCell>\n                  <Button icon={TrashIcon} aria-label=\"Edit\" onClick={() => handleDelete(user, token)}/>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n        </TableContainer>\n      \n      : \n        <Card>\n          <CardBody>\n            <p className=\"mb-4 font-semibold text-gray-600 dark:text-gray-300\">Log in to view data</p>\n            <p className=\"text-gray-600 dark:text-gray-400\">\n              Restricted access to flight log data\n            </p>\n          </CardBody>\n        </Card>\n      }\n      \n    </>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}